var CardboardCamera,extend=function(a,b){function c(){this.constructor=a}for(var d in b)hasProp.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},hasProp={}.hasOwnProperty;CardboardCamera=function(a){function b(){}return extend(b,a),b}(THREE.Camera);var CardboardClient,Four;Four={},CardboardClient=function(){function a(){var a;this.renderer=new THREE.WebGLRenderer||new THREE.CanvasRenderer,this.clientId=null,this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e4),this.camera.position.z=4,this.active=!0,this.objects={},this.pin=-1,this.handAdapter=new HandAdapter(this),adapter,a=new THREE.ObjectLoader,this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement),this.io=io(),this.setCallbacks()}return a.prototype.setCallbacks=function(){var a;return this.io.on("connect",function(a){return function(){return a.io.emit("cardboard",a.pin)}}(this)),this.io.on("message",function(a){return function(b){return"error"===b?(a.io.disconnect(),$(".clientId").show()):a.handAdapter.frameAction(JSON.parse(b))}}(this)),this.io.on("add",function(a){return function(b){return loader.parse(b,function(c){return a.scene.add(c),a.objects[b.object.userData.id]=c})}}(this)),this.io.on("remove",function(a){return function(b){var c;return c=a.objects[b],a.scene.remove(c),delete a.objects[b]}}(this)),this.io.on("update",function(a){return function(b){var c,d,e;return c=a.objects[b.id],null==c?a.io.emit("info",{id:b.id}):(d=b.position,e=b.rotation,c.rotation.set(e.x,e.y,e.z,e.order),c.position.set(d.x,d.y,d.z))}}(this)),this.io.on("object",function(a){return function(b){return null==a.objects[b.object.userData.id]?loader.parse(b,function(c){return a.objects[b.object.userData.id]=c,a.scene.add(c)}):void 0}}(this)),a=new THREE.StereoEffect(renderer),a.eyeSeparation=10,a.setSize(window.innerWidth,window.innerHeight)},a.prototype.setPinAndConnect=function(){return this.pin=$("input#pinInput").val(),$(".clientId").hide()},a.prototype.reconnect=function(){return this.io=io(),this.setCallbacks()},a.prototype.animate=function(){return requestAnimationFrame(function(a){return function(){return a.animate()}}(this)),this.renderer.render(this.scene,this.camera)},a}(),Four.CardboardClient=CardboardClient;var HandAdapter,spareMeshes;spareMeshes={left:[],right:[]},HandAdapter=function(){function a(a){this.scope=null!=a?a:{},this.left=null,this.right=null}return a.prototype.createMesh=function(a){var b,c,d;return b=(new THREE.JSONLoader).parse(a),b.materials[0].skinning=!0,b.materials[0].transparent=!0,b.materials[0].opacity=.7,b.materials[0].emissive.setHex(8947848),b.materials[0].vertexColors=THREE.VertexColors,b.materials[0].depthTest=!0,_extend(b.materials[0],this.scope.materialOptions),_extend(b.geometry,this.scope.geometryOptions),c=new THREE.SkinnedMesh(b.geometry,b.materials[0]),c.positionRaw=new THREE.Vector3,c.fingers=c.children[0].children,c.castShadow=!0,c.bonesBySkinIndex={},d=0,c.children[0].traverse(function(a){return a.skinIndex=d,c.bonesBySkinIndex[d]=a,d++}),c.boneLabels={},this.scope.boneLabels&&c.traverse(function(a){var b,d,e,f,g,h,i;e=(d=c.boneLabels)[f=a.id]||(d[f]=document.createElement("div")),e.style.position="absolute",e.style.zIndex="10",e.style.color="white",e.style.fontSize="20px",e.style.textShadow="0px 0px 3px black",e.style.fontFamily="helvetica",e.style.textAlign="center",g=this.scope.labelAttributes,h=[];for(b in g)i=g[b],h.push(e.setAttribute(b,i));return h}),c.screenPosition=function(a){var b,c,d,e;return b=this.scope.camera,console.assert(b instanceof THREE.Camera,"screenPosition expects camera, got",b),e=parseInt(window.getComputedStyle(this.scope.renderer.domElement).width,10),c=parseInt(window.getComputedStyle(this.scope.renderer.domElement).height,10),console.assert(e&&c),d=new THREE.Vector3,a instanceof THREE.Vector3?d.fromArray(a.toArray()):d.fromArray(a).sub(this.positionRaw).add(this.position),d.project(b),d.x=d.x*e/2+e/2,d.y=d.y*c/2+c/2,console.assert(!isNaN(d.x)&&!isNaN(d.x),"x/y screen position invalid"),d},c.scenePosition=function(a,b){return b.fromArray(a).sub(c.positionRaw).add(c.position)},c.scaleFromHand=function(a){var b,d;return b=(new THREE.Vector3).subVectors((new THREE.Vector3).fromArray(a.fingers[2].pipPosition),(new THREE.Vector3).fromArray(a.fingers[2].mcpPosition)).length(),d=c.fingers[2].position.length(),c.leapScale=b/d,c.scale.set(c.leapScale,c.leapScale,c.leapScale)},c},a.prototype.getMesh=function(a){var b,c,d;return d=this.spareMeshes[a.type],d.length>0?c=d.pop():(b=this.rigs[a.type],c=this.createMesh(b)),c},a.prototype.frameAction=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;for(a.fingers=_sortBy(a.fingers,function(a){return a.id}),"left"===a.type?(g=this.left||getMesh(a),null==this.left&&this.scope.scene.add(g),this.left=g):(g=this.right||getMesh(a),null==this.right&&this.scope.scene.add(g),this.right=g),u=handMesh.children[0],handMesh.scaleFromHand(a),u.positionLeap.fromArray(a.palmPosition),v=u.children,i=k=0,m=v.length;m>k;i=++k)r=v[i],r.positionLeap.fromArray(a.fingers[i].mcpPosition),r.pip.positionLeap.fromArray(a.fingers[i].pipPosition),r.dip.positionLeap.fromArray(a.fingers[i].dipPosition),r.tip.positionLeap.fromArray(a.fingers[i].tipPosition);for(u.worldDirection.fromArray(a.direction),u.up.fromArray(a.palmNormal).multiplyScalar(-1),u.worldUp.fromArray(a.palmNormal).multiplyScalar(-1),handMesh.positionRaw.fromArray(a.palmPosition),handMesh.position.copy(handMesh.positionRaw).multiplyScalar(this.scope.positionScale),handMesh.matrix.lookAt(u.worldDirection,zeroVector,u.up),u.worldQuaternion.setFromRotationMatrix(handMesh.matrix),w=u.children,l=0,n=w.length;n>l;l++)r=w[l],r.traverse(function(a){return a.children[0]?(a.worldDirection.subVectors(a.children[0].positionLeap,a.positionLeap).normalize(),a.positionFromWorld(a.children[0].positionLeap,a.positionLeap)):void 0});if(handMesh.helper&&handMesh.helper.update(),this.scope.boneLabels&&u.traverse(function(b){var c,d;return(c=handMesh.boneLabels[b.id])?(d=handMesh.screenPosition(b.positionLeap,this.scope.camera),c.style.left=d.x+"px",c.style.bottom=d.y+"px",c.innerHTML=this.scope.boneLabels(b,a)||""):void 0}),this.scope.boneColors){for(f=handMesh.geometry,c={},i=0;i<f.vertices.length;)c[s=f.skinIndices[i].x]||(c[s]=this.scope.boneColors(handMesh.bonesBySkinIndex[f.skinIndices[i].x],a)||{hue:0,saturation:0}),c[t=f.skinIndices[i].y]||(c[t]=this.scope.boneColors(handMesh.bonesBySkinIndex[f.skinIndices[i].y],a)||{hue:0,saturation:0}),B=c[f.skinIndices[i].x],C=c[f.skinIndices[i].y],A=f.skinWeights[i],h=B.hue||C.hue,p=B.lightness||C.lightness||.5,z=B.saturation*A.x+C.saturation*A.y,(b=f.colors)[i]||(b[i]=new THREE.Color),f.colors[i].setHSL(h,z,p),i++;for(f.colorsNeedUpdate=!0,e="abc",x=f.faces,y=[],q=0,o=x.length;o>q;q++)d=x[q],j=0,y.push(function(){var a;for(a=[];3>j;)d.vertexColors[j]=f.colors[d[e[j]]],a.push(j++);return a}());return y}},a}();